eaabdcf2d70634a1c16d2281dc6dc573
"use strict";

/**
 * Guard d'authentification JWT pour le Service de Gestion des Projets (C04)
 *
 * Ce guard assure la validation des tokens JWT pour toutes les routes protégées,
 * intègre un cache Redis pour optimiser les performances, et maintient un audit
 * trail complet des tentatives d'accès.
 *
 * Responsabilités :
 * - Validation des tokens JWT via le Service d'Authentification (C03)
 * - Cache intelligent des validations pour améliorer les performances
 * - Injection des informations utilisateur dans le contexte de requête
 * - Audit de sécurité et logging structuré
 * - Gestion gracieuse des erreurs et timeouts
 *
 * @fileoverview Guard principal d'authentification JWT
 * @version 1.0.0
 * @since 2025-01-28
 */
/* istanbul ignore next */
function cov_1egijtk2j1() {
  var path = "/Users/nicolasbernard/Desktop/project-service/src/common/guards/auth.guard.ts";
  var hash = "0c87421a2bfae3f663e4e58e2e3b2c9564187ffe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/nicolasbernard/Desktop/project-service/src/common/guards/auth.guard.ts",
    statementMap: {
      "0": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 25,
          column: 1
        }
      },
      "1": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 28
        }
      },
      "2": {
        start: {
          line: 21,
          column: 34
        },
        end: {
          line: 21,
          column: 125
        }
      },
      "3": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 23,
          column: 150
        }
      },
      "4": {
        start: {
          line: 22,
          column: 79
        },
        end: {
          line: 22,
          column: 131
        }
      },
      "5": {
        start: {
          line: 23,
          column: 9
        },
        end: {
          line: 23,
          column: 150
        }
      },
      "6": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 43
        }
      },
      "7": {
        start: {
          line: 23,
          column: 58
        },
        end: {
          line: 23,
          column: 150
        }
      },
      "8": {
        start: {
          line: 23,
          column: 81
        },
        end: {
          line: 23,
          column: 150
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "10": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 109
        }
      },
      "12": {
        start: {
          line: 27,
          column: 79
        },
        end: {
          line: 27,
          column: 109
        }
      },
      "13": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 62
        }
      },
      "14": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "15": {
        start: {
          line: 32,
          column: 17
        },
        end: {
          line: 32,
          column: 42
        }
      },
      "16": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 33,
          column: 42
        }
      },
      "17": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 40
        }
      },
      "18": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 35,
          column: 34
        }
      },
      "19": {
        start: {
          line: 36,
          column: 15
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "20": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 37,
          column: 64
        }
      },
      "21": {
        start: {
          line: 38,
          column: 24
        },
        end: {
          line: 38,
          column: 60
        }
      },
      "22": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "23": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 375,
          column: 1
        }
      },
      "24": {
        start: {
          line: 60,
          column: 13
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "25": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 43
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 41
        }
      },
      "27": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 39
        }
      },
      "28": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 36
        }
      },
      "29": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 24
        }
      },
      "30": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 52
        }
      },
      "31": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 92
        }
      },
      "32": {
        start: {
          line: 87,
          column: 26
        },
        end: {
          line: 87,
          column: 36
        }
      },
      "33": {
        start: {
          line: 89,
          column: 24
        },
        end: {
          line: 89,
          column: 26
        }
      },
      "34": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 90,
          column: 28
        }
      },
      "35": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "36": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 52
        }
      },
      "37": {
        start: {
          line: 95,
          column: 32
        },
        end: {
          line: 95,
          column: 69
        }
      },
      "38": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "39": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 129
        }
      },
      "40": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 76
        }
      },
      "41": {
        start: {
          line: 100,
          column: 26
        },
        end: {
          line: 100,
          column: 43
        }
      },
      "42": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "43": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 127
        }
      },
      "44": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 78
        }
      },
      "45": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 46
        }
      },
      "46": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 57
        }
      },
      "47": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "48": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 32
        }
      },
      "49": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 89
        }
      },
      "50": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 70
        }
      },
      "51": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 102
        }
      },
      "52": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 82
        }
      },
      "53": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 54
        }
      },
      "54": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 110
        }
      },
      "55": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 24
        }
      },
      "56": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 107
        }
      },
      "57": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 55
        }
      },
      "58": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 25
        }
      },
      "59": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 141,
          column: 45
        }
      },
      "60": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "61": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "62": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 66
        }
      },
      "63": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 92
        }
      },
      "64": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "65": {
        start: {
          line: 160,
          column: 31
        },
        end: {
          line: 160,
          column: 60
        }
      },
      "66": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "67": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 44
        }
      },
      "68": {
        start: {
          line: 165,
          column: 26
        },
        end: {
          line: 165,
          column: 47
        }
      },
      "69": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "70": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 72
        }
      },
      "71": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 57
        }
      },
      "72": {
        start: {
          line: 170,
          column: 26
        },
        end: {
          line: 170,
          column: 34
        }
      },
      "73": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "74": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 61
        }
      },
      "75": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 57
        }
      },
      "76": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 29
        }
      },
      "77": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 76
        }
      },
      "78": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 53
        }
      },
      "79": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "80": {
        start: {
          line: 191,
          column: 29
        },
        end: {
          line: 191,
          column: 54
        }
      },
      "81": {
        start: {
          line: 192,
          column: 31
        },
        end: {
          line: 192,
          column: 68
        }
      },
      "82": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "83": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 34
        }
      },
      "84": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 29
        }
      },
      "85": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 98
        }
      },
      "86": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 29
        }
      },
      "87": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "88": {
        start: {
          line: 212,
          column: 34
        },
        end: {
          line: 212,
          column: 74
        }
      },
      "89": {
        start: {
          line: 213,
          column: 30
        },
        end: {
          line: 236,
          column: 15
        }
      },
      "90": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 223,
          column: 17
        }
      },
      "91": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 86
        }
      },
      "92": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 226,
          column: 17
        }
      },
      "93": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 225,
          column: 86
        }
      },
      "94": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "95": {
        start: {
          line: 232,
          column: 20
        },
        end: {
          line: 232,
          column: 105
        }
      },
      "96": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 101
        }
      },
      "97": {
        start: {
          line: 237,
          column: 29
        },
        end: {
          line: 237,
          column: 72
        }
      },
      "98": {
        start: {
          line: 238,
          column: 25
        },
        end: {
          line: 238,
          column: 38
        }
      },
      "99": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 242,
          column: 13
        }
      },
      "100": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 82
        }
      },
      "101": {
        start: {
          line: 244,
          column: 25
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "102": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "103": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 82
        }
      },
      "104": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 24
        }
      },
      "105": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 260,
          column: 13
        }
      },
      "106": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 28
        }
      },
      "107": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 81
        }
      },
      "108": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 78
        }
      },
      "109": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "110": {
        start: {
          line: 274,
          column: 29
        },
        end: {
          line: 274,
          column: 54
        }
      },
      "111": {
        start: {
          line: 276,
          column: 36
        },
        end: {
          line: 276,
          column: 89
        }
      },
      "112": {
        start: {
          line: 277,
          column: 24
        },
        end: {
          line: 277,
          column: 79
        }
      },
      "113": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 61
        }
      },
      "114": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 72
        }
      },
      "115": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "116": {
        start: {
          line: 293,
          column: 28
        },
        end: {
          line: 293,
          column: 52
        }
      },
      "117": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 32
        }
      },
      "118": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 75
        }
      },
      "119": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 88
        }
      },
      "120": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "121": {
        start: {
          line: 314,
          column: 30
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "122": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 329,
          column: 13
        }
      },
      "123": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 325,
          column: 98
        }
      },
      "124": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 90
        }
      },
      "125": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 66
        }
      },
      "126": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "127": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 24
        }
      },
      "128": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 82
        }
      },
      "129": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 74
        }
      },
      "130": {
        start: {
          line: 363,
          column: 21
        },
        end: {
          line: 363,
          column: 42
        }
      },
      "131": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 54
        }
      },
      "132": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 78
        }
      },
      "133": {
        start: {
          line: 376,
          column: 0
        },
        end: {
          line: 376,
          column: 30
        }
      },
      "134": {
        start: {
          line: 377,
          column: 0
        },
        end: {
          line: 382,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 46
          },
          end: {
            line: 20,
            column: 47
          }
        },
        loc: {
          start: {
            line: 20,
            column: 87
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 46
          },
          end: {
            line: 26,
            column: 47
          }
        },
        loc: {
          start: {
            line: 26,
            column: 62
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 58
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 64
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 31
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 86
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 140
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 37
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 158
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 37
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 189
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 46
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 209
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 219,
            column: 89
          },
          end: {
            line: 219,
            column: 90
          }
        },
        loc: {
          start: {
            line: 219,
            column: 100
          },
          end: {
            line: 236,
            column: 13
          }
        },
        line: 219
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 50
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 272
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        loc: {
          start: {
            line: 291,
            column: 41
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 291
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 82
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 312
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        loc: {
          start: {
            line: 344,
            column: 36
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 344
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 362,
            column: 5
          }
        },
        loc: {
          start: {
            line: 362,
            column: 25
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 362
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 21
          },
          end: {
            line: 374,
            column: 5
          }
        },
        line: 372
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 25,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 22
          }
        }, {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 41
          }
        }, {
          start: {
            line: 20,
            column: 46
          },
          end: {
            line: 25,
            column: 1
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 21,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 42
          },
          end: {
            line: 21,
            column: 48
          }
        }, {
          start: {
            line: 21,
            column: 51
          },
          end: {
            line: 21,
            column: 125
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 51
          },
          end: {
            line: 21,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 67
          },
          end: {
            line: 21,
            column: 118
          }
        }, {
          start: {
            line: 21,
            column: 121
          },
          end: {
            line: 21,
            column: 125
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 23,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 23,
            column: 150
          }
        }, {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 150
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 35
          }
        }, {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 22,
            column: 77
          }
        }],
        line: 22
      },
      "5": {
        loc: {
          start: {
            line: 23,
            column: 58
          },
          end: {
            line: 23,
            column: 150
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 58
          },
          end: {
            line: 23,
            column: 150
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "6": {
        loc: {
          start: {
            line: 23,
            column: 85
          },
          end: {
            line: 23,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 86
          },
          end: {
            line: 23,
            column: 143
          }
        }, {
          start: {
            line: 23,
            column: 148
          },
          end: {
            line: 23,
            column: 149
          }
        }],
        line: 23
      },
      "7": {
        loc: {
          start: {
            line: 23,
            column: 86
          },
          end: {
            line: 23,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 94
          },
          end: {
            line: 23,
            column: 98
          }
        }, {
          start: {
            line: 23,
            column: 101
          },
          end: {
            line: 23,
            column: 143
          }
        }],
        line: 23
      },
      "8": {
        loc: {
          start: {
            line: 23,
            column: 101
          },
          end: {
            line: 23,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 109
          },
          end: {
            line: 23,
            column: 126
          }
        }, {
          start: {
            line: 23,
            column: 129
          },
          end: {
            line: 23,
            column: 143
          }
        }],
        line: 23
      },
      "9": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 16
          }
        }, {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        }, {
          start: {
            line: 24,
            column: 25
          },
          end: {
            line: 24,
            column: 62
          }
        }],
        line: 24
      },
      "10": {
        loc: {
          start: {
            line: 26,
            column: 17
          },
          end: {
            line: 28,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 22
          }
        }, {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 41
          }
        }, {
          start: {
            line: 26,
            column: 46
          },
          end: {
            line: 28,
            column: 1
          }
        }],
        line: 26
      },
      "11": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 109
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 109
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "12": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 35
          }
        }, {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 77
          }
        }],
        line: 27
      },
      "13": {
        loc: {
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 71,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 69,
            column: 74
          }
        }, {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 40
          }
        }, {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 35
          }
        }],
        line: 69
      },
      "14": {
        loc: {
          start: {
            line: 72,
            column: 43
          },
          end: {
            line: 74,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 43
          },
          end: {
            line: 72,
            column: 89
          }
        }, {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 44
          }
        }, {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 18
          }
        }],
        line: 72
      },
      "15": {
        loc: {
          start: {
            line: 75,
            column: 34
          },
          end: {
            line: 77,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 34
          },
          end: {
            line: 75,
            column: 69
          }
        }, {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 33
          }
        }, {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 46
          }
        }],
        line: 75
      },
      "16": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "17": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "18": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 119,
            column: 13
          }
        }],
        line: 109
      },
      "19": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 144,
            column: 59
          }
        }, {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 66
          }
        }, {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 149,
            column: 92
          }
        }],
        line: 142
      },
      "20": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "21": {
        loc: {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "22": {
        loc: {
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 166,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 166,
            column: 34
          }
        }, {
          start: {
            line: 166,
            column: 38
          },
          end: {
            line: 166,
            column: 59
          }
        }],
        line: 166
      },
      "23": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "24": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 172,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 172,
            column: 22
          }
        }, {
          start: {
            line: 172,
            column: 26
          },
          end: {
            line: 172,
            column: 43
          }
        }],
        line: 172
      },
      "25": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "26": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 193,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 193,
            column: 26
          }
        }, {
          start: {
            line: 193,
            column: 30
          },
          end: {
            line: 193,
            column: 75
          }
        }],
        line: 193
      },
      "27": {
        loc: {
          start: {
            line: 221,
            column: 16
          },
          end: {
            line: 223,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 16
          },
          end: {
            line: 223,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "28": {
        loc: {
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 226,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 226,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "29": {
        loc: {
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "30": {
        loc: {
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 231,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 228,
            column: 49
          }
        }, {
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 229,
            column: 46
          }
        }, {
          start: {
            line: 230,
            column: 20
          },
          end: {
            line: 230,
            column: 49
          }
        }, {
          start: {
            line: 231,
            column: 20
          },
          end: {
            line: 231,
            column: 54
          }
        }],
        line: 228
      },
      "31": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "32": {
        loc: {
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 240,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 240,
            column: 27
          }
        }, {
          start: {
            line: 240,
            column: 31
          },
          end: {
            line: 240,
            column: 41
          }
        }],
        line: 240
      },
      "33": {
        loc: {
          start: {
            line: 247,
            column: 23
          },
          end: {
            line: 247,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 23
          },
          end: {
            line: 247,
            column: 38
          }
        }, {
          start: {
            line: 247,
            column: 42
          },
          end: {
            line: 247,
            column: 44
          }
        }],
        line: 247
      },
      "34": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "35": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "36": {
        loc: {
          start: {
            line: 256,
            column: 16
          },
          end: {
            line: 258,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 16
          },
          end: {
            line: 256,
            column: 63
          }
        }, {
          start: {
            line: 257,
            column: 16
          },
          end: {
            line: 257,
            column: 69
          }
        }, {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 70
          }
        }],
        line: 256
      },
      "37": {
        loc: {
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 329,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 329,
            column: 13
          }
        }, {
          start: {
            line: 327,
            column: 17
          },
          end: {
            line: 329,
            column: 13
          }
        }],
        line: 324
      },
      "38": {
        loc: {
          start: {
            line: 346,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "39": {
        loc: {
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 348,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 346,
            column: 59
          }
        }, {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 347,
            column: 65
          }
        }, {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 66
          }
        }],
        line: 346
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/nicolasbernard/Desktop/project-service/src/common/guards/auth.guard.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/nicolasbernard/Desktop/project-service/src/common/guards/auth.guard.ts"],
      sourcesContent: ["/**\n * Guard d'authentification JWT pour le Service de Gestion des Projets (C04)\n * \n * Ce guard assure la validation des tokens JWT pour toutes les routes prot\xE9g\xE9es,\n * int\xE8gre un cache Redis pour optimiser les performances, et maintient un audit\n * trail complet des tentatives d'acc\xE8s.\n * \n * Responsabilit\xE9s :\n * - Validation des tokens JWT via le Service d'Authentification (C03)\n * - Cache intelligent des validations pour am\xE9liorer les performances\n * - Injection des informations utilisateur dans le contexte de requ\xEAte\n * - Audit de s\xE9curit\xE9 et logging structur\xE9\n * - Gestion gracieuse des erreurs et timeouts\n * \n * @fileoverview Guard principal d'authentification JWT\n * @version 1.0.0\n * @since 2025-01-28\n */\n\nimport {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  UnauthorizedException,\n  ServiceUnavailableException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { HttpService } from '@nestjs/axios';\nimport { FastifyRequest } from 'fastify';\nimport { createHash } from 'crypto';\nimport { firstValueFrom, timeout, catchError } from 'rxjs';\nimport { AxiosError } from 'axios';\n\nimport { User, isValidUser } from '../interfaces/user.interface';\nimport { CacheService } from '../../cache/cache.service';\n\n/**\n * Interface pour la r\xE9ponse du service d'authentification\n */\ninterface AuthValidationResponse {\n  valid: boolean;\n  user: {\n    id: string;\n    email: string;\n    roles: string[];\n  };\n  expiresAt: string;\n}\n\n/**\n * Interface pour les m\xE9triques d'audit\n */\ninterface AuthAuditMetrics {\n  event: 'auth_attempt';\n  success: boolean;\n  userId?: string;\n  tokenHash: string;\n  timestamp: string;\n  requestId?: string;\n  error?: string;\n  cachehit?: boolean;\n  validationDuration?: number;\n}\n\n/**\n * Configuration par d\xE9faut du guard\n */\nconst DEFAULT_CONFIG = {\n  cachePrefix: 'auth:token:',\n  cacheTTL: 300, // 5 minutes\n  validationTimeout: 5000, // 5 secondes\n  retryAttempts: 3,\n  retryDelay: 1000, // 1 seconde\n  logLevel: 'info',\n} as const;\n\n/**\n * Guard d'authentification JWT\n * \n * Impl\xE9mente la validation s\xE9curis\xE9e des tokens JWT avec cache Redis\n * pour optimiser les performances et audit complet des acc\xE8s.\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  private readonly logger = new Logger(AuthGuard.name);\n  private readonly AUTH_SERVICE_URL: string;\n  private readonly CACHE_TTL: number;\n  private readonly VALIDATION_TIMEOUT: number;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly cacheService: CacheService,\n    private readonly httpService: HttpService,\n  ) {\n    // Utiliser ConfigService avec fallback sur process.env\n    this.AUTH_SERVICE_URL = this.configService.get<string>('AUTH_SERVICE_URL') || \n                           process.env.AUTH_SERVICE_URL || \n                           'http://localhost:3001';\n    \n    this.VALIDATION_TIMEOUT = parseInt(\n      this.configService.get<string>('AUTH_SERVICE_TIMEOUT') || \n      process.env.AUTH_SERVICE_TIMEOUT || \n      '5000', \n      10\n    );\n    \n    this.CACHE_TTL = parseInt(\n      this.configService.get<string>('CACHE_TTL') || \n      process.env.CACHE_TTL || \n      DEFAULT_CONFIG.cacheTTL.toString(),\n      10\n    );\n\n    this.logger.log(`AuthGuard initialized with service URL: ${this.AUTH_SERVICE_URL}`);\n  }\n\n  /**\n   * Point d'entr\xE9e principal du guard NestJS\n   * \n   * @param context - Contexte d'ex\xE9cution de la requ\xEAte\n   * @returns Promise<boolean> - true si authentification r\xE9ussie\n   */\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const startTime = Date.now();\n    let user: User | undefined;\n    let tokenHash = '';\n    let cacheHit = false;\n\n    try {\n      // Extraction de la requ\xEAte selon le contexte (HTTP, WebSocket, etc.)\n      const request = this.getRequest(context);\n      \n      // Extraction du token JWT avec gestion des erreurs de format\n      const tokenResult = this.extractTokenFromRequest(request);\n      if (tokenResult.error) {\n        await this.auditAccessAttempt('', false, undefined, new Error(tokenResult.error), false, Date.now() - startTime);\n        throw new UnauthorizedException(tokenResult.error);\n      }\n      \n      const token = tokenResult.token;\n      if (!token) {\n        await this.auditAccessAttempt('', false, undefined, new Error('Token missing'), false, Date.now() - startTime);\n        throw new UnauthorizedException('No token provided');\n      }\n\n      // G\xE9n\xE9ration du hash pour le cache et l'audit\n      tokenHash = this.hashToken(token);\n\n      // V\xE9rification du cache\n      user = await this.getCachedValidation(token);\n      if (user) {\n        cacheHit = true;\n        this.logger.debug(`Cache hit for token ${tokenHash.substring(0, 8)}...`);\n      } else {\n        // Validation via le service d'authentification\n        user = await this.validateTokenWithAuthService(token);\n        \n        // Mise en cache de la validation r\xE9ussie\n        await this.cacheValidation(token, user, new Date(Date.now() + this.CACHE_TTL * 1000));\n        this.logger.debug(`Token validated and cached for ${user.email}`);\n      }\n\n      // Injection de l'utilisateur dans le contexte\n      this.injectUserIntoContext(context, user);\n\n      // Audit de la tentative r\xE9ussie\n      await this.auditAccessAttempt(tokenHash, true, user, undefined, cacheHit, Date.now() - startTime);\n\n      return true;\n\n    } catch (error) {\n      // Audit de la tentative \xE9chou\xE9e\n      await this.auditAccessAttempt(tokenHash, false, user, error as Error, cacheHit, Date.now() - startTime);\n      \n      // Gestion des erreurs\n      this.handleAuthError(error, 'canActivate');\n      return false;\n    }\n  }\n\n  /**\n   * Extraction de l'objet request selon le type de contexte\n   * \n   * @param context - Contexte d'ex\xE9cution\n   * @returns L'objet request\n   */\n  private getRequest(context: ExecutionContext): FastifyRequest {\n    const contextType = context.getType<'http' | 'ws'>();\n    \n    switch (contextType) {\n      case 'http':\n        return context.switchToHttp().getRequest<FastifyRequest>();\n      case 'ws':\n        // Support WebSocket si n\xE9cessaire dans le futur\n        return context.switchToWs().getClient().handshake;\n      default:\n        throw new InternalServerErrorException('Unsupported context type');\n    }\n  }\n\n  /**\n   * Extraction du token JWT depuis les headers de requ\xEAte avec gestion d'erreurs am\xE9lior\xE9e\n   * \n   * @param request - Requ\xEAte Fastify\n   * @returns Objet avec token ou erreur\n   */\n  private extractTokenFromRequest(request: FastifyRequest): { token?: string; error?: string } {\n    try {\n      const authHeader = request.headers.authorization;\n      \n      if (!authHeader) {\n        return { error: undefined }; // Pas de header = pas de token (pas d'erreur de format)\n      }\n\n      // V\xE9rification du format \"Bearer <token>\"\n      const parts = authHeader.split(' ');\n      if (parts.length !== 2 || parts[0] !== 'Bearer') {\n        this.logger.warn('Invalid authorization header format');\n        return { error: 'Invalid token format' };\n      }\n\n      const token = parts[1];\n      \n      // Validation basique du token (non vide, longueur minimale)\n      if (!token || token.length < 10) {\n        this.logger.warn('Token too short or empty');\n        return { error: 'Invalid token format' };\n      }\n\n      return { token };\n\n    } catch (error) {\n      this.logger.error('Error extracting token from request', error);\n      return { error: 'Invalid token format' };\n    }\n  }\n\n  /**\n   * Recherche d'une validation en cache\n   * \n   * @param token - Token JWT \xE0 v\xE9rifier\n   * @returns Utilisateur si trouv\xE9 en cache, undefined sinon\n   */\n  private async getCachedValidation(token: string): Promise<User | undefined> {\n    try {\n      const cacheKey = this.buildCacheKey(token);\n      const cachedData = await this.cacheService.get<User>(cacheKey);\n      \n      if (cachedData && isValidUser(cachedData)) {\n        return cachedData;\n      }\n      \n      return undefined;\n\n    } catch (error) {\n      this.logger.warn('Cache retrieval failed, falling back to service validation', error);\n      return undefined;\n    }\n  }\n\n  /**\n   * Validation du token via le Service d'Authentification (C03)\n   * \n   * @param token - Token JWT \xE0 valider\n   * @returns Utilisateur valid\xE9\n   */\n  private async validateTokenWithAuthService(token: string): Promise<User> {\n    try {\n      // URL corrig\xE9e pour correspondre aux tests existants\n      const validationUrl = `${this.AUTH_SERVICE_URL}/auth/validate`;\n      \n      const response$ = this.httpService.post<AuthValidationResponse>(\n        validationUrl,\n        { token },\n        {\n          timeout: this.VALIDATION_TIMEOUT,\n          headers: {\n            'Content-Type': 'application/json',\n            'User-Agent': 'project-service/1.0.0',\n          },\n        }\n      ).pipe(\n        timeout(this.VALIDATION_TIMEOUT),\n        catchError((error: AxiosError) => {\n          // Gestion sp\xE9cifique selon le type d'erreur Axios\n          if (error.response?.status === 401) {\n            throw new UnauthorizedException('Authentication failed');\n          }\n          \n          if (error.response?.status === 400) {\n            throw new UnauthorizedException('Authentication failed');\n          }\n          \n          // Erreurs de connexion et timeout\n          if (error.code === 'ECONNREFUSED' || \n              error.code === 'ENOTFOUND' || \n              error.name === 'TimeoutError' ||\n              error.message?.includes('timeout')) {\n            throw new ServiceUnavailableException('Authentication service unavailable');\n          }\n          \n          // Autres erreurs -> ServiceUnavailableException pour tests\n          throw new ServiceUnavailableException('Authentication service unavailable');\n        })\n      );\n\n      const response = await firstValueFrom(response$);\n      const data = response.data;\n\n      // Validation de la r\xE9ponse\n      if (!data.valid || !data.user) {\n        throw new UnauthorizedException('Authentication failed');\n      }\n\n      // Construction de l'objet User\n      const user: User = {\n        id: data.user.id,\n        email: data.user.email,\n        roles: data.user.roles || [],\n      };\n\n      // Validation finale de l'objet User\n      if (!isValidUser(user)) {\n        throw new UnauthorizedException('Authentication failed');\n      }\n\n      return user;\n\n    } catch (error) {\n      if (error instanceof UnauthorizedException || \n          error instanceof ServiceUnavailableException || \n          error instanceof InternalServerErrorException) {\n        throw error;\n      }\n      \n      this.logger.error('Unexpected error during token validation', error);\n      throw new UnauthorizedException('Authentication failed');\n    }\n  }\n\n  /**\n   * Mise en cache de la validation r\xE9ussie\n   * \n   * @param token - Token JWT\n   * @param user - Utilisateur valid\xE9\n   * @param expiresAt - Date d'expiration du token\n   */\n  private async cacheValidation(token: string, user: User, expiresAt: Date): Promise<void> {\n    try {\n      const cacheKey = this.buildCacheKey(token);\n      \n      // Calcul du TTL intelligent bas\xE9 sur l'expiration du token\n      const timeUntilExpiry = Math.floor((expiresAt.getTime() - Date.now()) / 1000);\n      const ttl = Math.min(this.CACHE_TTL, Math.max(timeUntilExpiry, 60)); // Min 1 minute\n\n      await this.cacheService.set(cacheKey, user, ttl);\n      \n    } catch (error) {\n      // Cache non critique - on log mais on ne bloque pas\n      this.logger.warn('Failed to cache token validation', error);\n    }\n  }\n\n  /**\n   * Injection de l'utilisateur dans le contexte de requ\xEAte\n   * \n   * @param context - Contexte d'ex\xE9cution\n   * @param user - Utilisateur \xE0 injecter\n   */\n  private injectUserIntoContext(context: ExecutionContext, user: User): void {\n    try {\n      const request = this.getRequest(context);\n      \n      // Injection pour utilisation par le d\xE9corateur @CurrentUser()\n      (request as any).user = user;\n      \n    } catch (error) {\n      this.logger.error('Failed to inject user into context', error);\n      throw new InternalServerErrorException('Context injection failed');\n    }\n  }\n\n  /**\n   * Audit des tentatives d'acc\xE8s pour la s\xE9curit\xE9 et le monitoring\n   * \n   * @param tokenHash - Hash du token (pour la s\xE9curit\xE9)\n   * @param success - Succ\xE8s ou \xE9chec de l'authentification\n   * @param user - Utilisateur (si authentification r\xE9ussie)\n   * @param error - Erreur (si authentification \xE9chou\xE9e)\n   * @param cacheHit - Indicateur de cache hit\n   * @param duration - Dur\xE9e de validation en ms\n   */\n  private async auditAccessAttempt(\n    tokenHash: string,\n    success: boolean,\n    user?: User,\n    error?: Error,\n    cacheHit?: boolean,\n    duration?: number\n  ): Promise<void> {\n    try {\n      const auditData: AuthAuditMetrics = {\n        event: 'auth_attempt',\n        success,\n        tokenHash: tokenHash.substring(0, 16), // Premiers 16 caract\xE8res pour l'audit\n        timestamp: new Date().toISOString(),\n        userId: user?.id,\n        error: error?.message,\n        cachehit: cacheHit,\n        validationDuration: duration,\n      };\n\n      if (success) {\n        this.logger.log(`\u2705 Authentication successful for user ${user?.email}`, auditData);\n      } else {\n        this.logger.warn(`\u274C Authentication failed: ${error?.message}`, auditData);\n      }\n\n      // TODO: Optionnellement envoyer vers un service d'audit externe\n      // await this.auditService.logSecurityEvent(auditData);\n\n    } catch (auditError) {\n      // L'audit ne doit jamais bloquer l'authentification\n      this.logger.error('Audit logging failed', auditError);\n    }\n  }\n\n  /**\n   * Gestion centralis\xE9e des erreurs d'authentification\n   * \n   * @param error - Erreur \xE0 traiter\n   * @param context - Contexte o\xF9 l'erreur s'est produite\n   */\n  private handleAuthError(error: any, context: string): never {\n    // Classification et transformation des erreurs\n    if (error instanceof UnauthorizedException || \n        error instanceof ServiceUnavailableException || \n        error instanceof InternalServerErrorException) {\n      throw error;\n    }\n\n    // Erreurs inattendues\n    this.logger.error(`Unexpected authentication error in ${context}`, error);\n    \n    // Ne pas leak d'informations sensibles\n    throw new UnauthorizedException('Authentication failed');\n  }\n\n  /**\n   * Construction de la cl\xE9 de cache s\xE9curis\xE9e\n   * \n   * @param token - Token JWT\n   * @returns Cl\xE9 de cache hash\xE9e\n   */\n  private buildCacheKey(token: string): string {\n    const hash = this.hashToken(token);\n    return `${DEFAULT_CONFIG.cachePrefix}${hash}`;\n  }\n\n  /**\n   * G\xE9n\xE9ration d'un hash SHA-256 du token pour la s\xE9curit\xE9\n   * \n   * @param token - Token \xE0 hasher\n   * @returns Hash SHA-256 en hexad\xE9cimal\n   */\n  private hashToken(token: string): string {\n    return createHash('sha256').update(token).digest('hex');\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c87421a2bfae3f663e4e58e2e3b2c9564187ffe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1egijtk2j1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1egijtk2j1();
var __decorate =
/* istanbul ignore next */
(cov_1egijtk2j1().s[0]++,
/* istanbul ignore next */
(cov_1egijtk2j1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1egijtk2j1().b[0][1]++, this.__decorate) ||
/* istanbul ignore next */
(cov_1egijtk2j1().b[0][2]++, function (decorators, target, key, desc) {
  /* istanbul ignore next */
  cov_1egijtk2j1().f[0]++;
  var c =
    /* istanbul ignore next */
    (cov_1egijtk2j1().s[1]++, arguments.length),
    r =
    /* istanbul ignore next */
    (cov_1egijtk2j1().s[2]++, c < 3 ?
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[1][0]++, target) :
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[1][1]++, desc === null ?
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[2][0]++, desc = Object.getOwnPropertyDescriptor(target, key)) :
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[2][1]++, desc))),
    d;
  /* istanbul ignore next */
  cov_1egijtk2j1().s[3]++;
  if (
  /* istanbul ignore next */
  (cov_1egijtk2j1().b[4][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1egijtk2j1().b[4][1]++, typeof Reflect.decorate === "function")) {
    /* istanbul ignore next */
    cov_1egijtk2j1().b[3][0]++;
    cov_1egijtk2j1().s[4]++;
    r = Reflect.decorate(decorators, target, key, desc);
  } else {
    /* istanbul ignore next */
    cov_1egijtk2j1().b[3][1]++;
    cov_1egijtk2j1().s[5]++;
    for (var i =
    /* istanbul ignore next */
    (cov_1egijtk2j1().s[6]++, decorators.length - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_1egijtk2j1().s[7]++;
      if (d = decorators[i]) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[5][0]++;
        cov_1egijtk2j1().s[8]++;
        r =
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[6][0]++, c < 3 ?
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[7][0]++, d(r)) :
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[7][1]++, c > 3 ?
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[8][0]++, d(target, key, r)) :
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[8][1]++, d(target, key)))) ||
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[6][1]++, r);
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[5][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1egijtk2j1().s[9]++;
  return /* istanbul ignore next */(cov_1egijtk2j1().b[9][0]++, c > 3) &&
  /* istanbul ignore next */
  (cov_1egijtk2j1().b[9][1]++, r) &&
  /* istanbul ignore next */
  (cov_1egijtk2j1().b[9][2]++, Object.defineProperty(target, key, r)), r;
}));
var __metadata =
/* istanbul ignore next */
(cov_1egijtk2j1().s[10]++,
/* istanbul ignore next */
(cov_1egijtk2j1().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1egijtk2j1().b[10][1]++, this.__metadata) ||
/* istanbul ignore next */
(cov_1egijtk2j1().b[10][2]++, function (k, v) {
  /* istanbul ignore next */
  cov_1egijtk2j1().f[1]++;
  cov_1egijtk2j1().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1egijtk2j1().b[12][0]++, typeof Reflect === "object") &&
  /* istanbul ignore next */
  (cov_1egijtk2j1().b[12][1]++, typeof Reflect.metadata === "function")) {
    /* istanbul ignore next */
    cov_1egijtk2j1().b[11][0]++;
    cov_1egijtk2j1().s[12]++;
    return Reflect.metadata(k, v);
  } else
  /* istanbul ignore next */
  {
    cov_1egijtk2j1().b[11][1]++;
  }
}));
var AuthGuard_1;
/* istanbul ignore next */
cov_1egijtk2j1().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1egijtk2j1().s[14]++;
exports.AuthGuard = void 0;
const common_1 =
/* istanbul ignore next */
(cov_1egijtk2j1().s[15]++, require("@nestjs/common"));
const config_1 =
/* istanbul ignore next */
(cov_1egijtk2j1().s[16]++, require("@nestjs/config"));
const axios_1 =
/* istanbul ignore next */
(cov_1egijtk2j1().s[17]++, require("@nestjs/axios"));
const crypto_1 =
/* istanbul ignore next */
(cov_1egijtk2j1().s[18]++, require("crypto"));
const rxjs_1 =
/* istanbul ignore next */
(cov_1egijtk2j1().s[19]++, require("rxjs"));
const user_interface_1 =
/* istanbul ignore next */
(cov_1egijtk2j1().s[20]++, require("../interfaces/user.interface"));
const cache_service_1 =
/* istanbul ignore next */
(cov_1egijtk2j1().s[21]++, require("../../cache/cache.service"));
/**
 * Configuration par défaut du guard
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_1egijtk2j1().s[22]++, {
  cachePrefix: 'auth:token:',
  cacheTTL: 300,
  // 5 minutes
  validationTimeout: 5000,
  // 5 secondes
  retryAttempts: 3,
  retryDelay: 1000,
  // 1 seconde
  logLevel: 'info'
});
/**
 * Guard d'authentification JWT
 *
 * Implémente la validation sécurisée des tokens JWT avec cache Redis
 * pour optimiser les performances et audit complet des accès.
 */
let AuthGuard =
/* istanbul ignore next */
(cov_1egijtk2j1().s[23]++, AuthGuard_1 = class AuthGuard {
  configService;
  cacheService;
  httpService;
  logger =
  /* istanbul ignore next */
  (cov_1egijtk2j1().s[24]++, new common_1.Logger(AuthGuard_1.name));
  AUTH_SERVICE_URL;
  CACHE_TTL;
  VALIDATION_TIMEOUT;
  constructor(configService, cacheService, httpService) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[2]++;
    cov_1egijtk2j1().s[25]++;
    this.configService = configService;
    /* istanbul ignore next */
    cov_1egijtk2j1().s[26]++;
    this.cacheService = cacheService;
    /* istanbul ignore next */
    cov_1egijtk2j1().s[27]++;
    this.httpService = httpService;
    // Utiliser ConfigService avec fallback sur process.env
    /* istanbul ignore next */
    cov_1egijtk2j1().s[28]++;
    this.AUTH_SERVICE_URL =
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[13][0]++, this.configService.get('AUTH_SERVICE_URL')) ||
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[13][1]++, process.env.AUTH_SERVICE_URL) ||
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[13][2]++, 'http://localhost:3001');
    /* istanbul ignore next */
    cov_1egijtk2j1().s[29]++;
    this.VALIDATION_TIMEOUT = parseInt(
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[14][0]++, this.configService.get('AUTH_SERVICE_TIMEOUT')) ||
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[14][1]++, process.env.AUTH_SERVICE_TIMEOUT) ||
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[14][2]++, '5000'), 10);
    /* istanbul ignore next */
    cov_1egijtk2j1().s[30]++;
    this.CACHE_TTL = parseInt(
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[15][0]++, this.configService.get('CACHE_TTL')) ||
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[15][1]++, process.env.CACHE_TTL) ||
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[15][2]++, DEFAULT_CONFIG.cacheTTL.toString()), 10);
    /* istanbul ignore next */
    cov_1egijtk2j1().s[31]++;
    this.logger.log(`AuthGuard initialized with service URL: ${this.AUTH_SERVICE_URL}`);
  }
  /**
   * Point d'entrée principal du guard NestJS
   *
   * @param context - Contexte d'exécution de la requête
   * @returns Promise<boolean> - true si authentification réussie
   */
  async canActivate(context) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[3]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1egijtk2j1().s[32]++, Date.now());
    let user;
    let tokenHash =
    /* istanbul ignore next */
    (cov_1egijtk2j1().s[33]++, '');
    let cacheHit =
    /* istanbul ignore next */
    (cov_1egijtk2j1().s[34]++, false);
    /* istanbul ignore next */
    cov_1egijtk2j1().s[35]++;
    try {
      // Extraction de la requête selon le contexte (HTTP, WebSocket, etc.)
      const request =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[36]++, this.getRequest(context));
      // Extraction du token JWT avec gestion des erreurs de format
      const tokenResult =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[37]++, this.extractTokenFromRequest(request));
      /* istanbul ignore next */
      cov_1egijtk2j1().s[38]++;
      if (tokenResult.error) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[16][0]++;
        cov_1egijtk2j1().s[39]++;
        await this.auditAccessAttempt('', false, undefined, new Error(tokenResult.error), false, Date.now() - startTime);
        /* istanbul ignore next */
        cov_1egijtk2j1().s[40]++;
        throw new common_1.UnauthorizedException(tokenResult.error);
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[16][1]++;
      }
      const token =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[41]++, tokenResult.token);
      /* istanbul ignore next */
      cov_1egijtk2j1().s[42]++;
      if (!token) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[17][0]++;
        cov_1egijtk2j1().s[43]++;
        await this.auditAccessAttempt('', false, undefined, new Error('Token missing'), false, Date.now() - startTime);
        /* istanbul ignore next */
        cov_1egijtk2j1().s[44]++;
        throw new common_1.UnauthorizedException('No token provided');
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[17][1]++;
      }
      // Génération du hash pour le cache et l'audit
      cov_1egijtk2j1().s[45]++;
      tokenHash = this.hashToken(token);
      // Vérification du cache
      /* istanbul ignore next */
      cov_1egijtk2j1().s[46]++;
      user = await this.getCachedValidation(token);
      /* istanbul ignore next */
      cov_1egijtk2j1().s[47]++;
      if (user) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[18][0]++;
        cov_1egijtk2j1().s[48]++;
        cacheHit = true;
        /* istanbul ignore next */
        cov_1egijtk2j1().s[49]++;
        this.logger.debug(`Cache hit for token ${tokenHash.substring(0, 8)}...`);
      } else {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[18][1]++;
        cov_1egijtk2j1().s[50]++;
        // Validation via le service d'authentification
        user = await this.validateTokenWithAuthService(token);
        // Mise en cache de la validation réussie
        /* istanbul ignore next */
        cov_1egijtk2j1().s[51]++;
        await this.cacheValidation(token, user, new Date(Date.now() + this.CACHE_TTL * 1000));
        /* istanbul ignore next */
        cov_1egijtk2j1().s[52]++;
        this.logger.debug(`Token validated and cached for ${user.email}`);
      }
      // Injection de l'utilisateur dans le contexte
      /* istanbul ignore next */
      cov_1egijtk2j1().s[53]++;
      this.injectUserIntoContext(context, user);
      // Audit de la tentative réussie
      /* istanbul ignore next */
      cov_1egijtk2j1().s[54]++;
      await this.auditAccessAttempt(tokenHash, true, user, undefined, cacheHit, Date.now() - startTime);
      /* istanbul ignore next */
      cov_1egijtk2j1().s[55]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1egijtk2j1().s[56]++;
      // Audit de la tentative échouée
      await this.auditAccessAttempt(tokenHash, false, user, error, cacheHit, Date.now() - startTime);
      // Gestion des erreurs
      /* istanbul ignore next */
      cov_1egijtk2j1().s[57]++;
      this.handleAuthError(error, 'canActivate');
      /* istanbul ignore next */
      cov_1egijtk2j1().s[58]++;
      return false;
    }
  }
  /**
   * Extraction de l'objet request selon le type de contexte
   *
   * @param context - Contexte d'exécution
   * @returns L'objet request
   */
  getRequest(context) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[4]++;
    const contextType =
    /* istanbul ignore next */
    (cov_1egijtk2j1().s[59]++, context.getType());
    /* istanbul ignore next */
    cov_1egijtk2j1().s[60]++;
    switch (contextType) {
      case 'http':
        /* istanbul ignore next */
        cov_1egijtk2j1().b[19][0]++;
        cov_1egijtk2j1().s[61]++;
        return context.switchToHttp().getRequest();
      case 'ws':
        /* istanbul ignore next */
        cov_1egijtk2j1().b[19][1]++;
        cov_1egijtk2j1().s[62]++;
        // Support WebSocket si nécessaire dans le futur
        return context.switchToWs().getClient().handshake;
      default:
        /* istanbul ignore next */
        cov_1egijtk2j1().b[19][2]++;
        cov_1egijtk2j1().s[63]++;
        throw new common_1.InternalServerErrorException('Unsupported context type');
    }
  }
  /**
   * Extraction du token JWT depuis les headers de requête avec gestion d'erreurs améliorée
   *
   * @param request - Requête Fastify
   * @returns Objet avec token ou erreur
   */
  extractTokenFromRequest(request) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[5]++;
    cov_1egijtk2j1().s[64]++;
    try {
      const authHeader =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[65]++, request.headers.authorization);
      /* istanbul ignore next */
      cov_1egijtk2j1().s[66]++;
      if (!authHeader) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[20][0]++;
        cov_1egijtk2j1().s[67]++;
        return {
          error: undefined
        }; // Pas de header = pas de token (pas d'erreur de format)
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[20][1]++;
      }
      // Vérification du format "Bearer <token>"
      const parts =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[68]++, authHeader.split(' '));
      /* istanbul ignore next */
      cov_1egijtk2j1().s[69]++;
      if (
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[22][0]++, parts.length !== 2) ||
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[22][1]++, parts[0] !== 'Bearer')) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[21][0]++;
        cov_1egijtk2j1().s[70]++;
        this.logger.warn('Invalid authorization header format');
        /* istanbul ignore next */
        cov_1egijtk2j1().s[71]++;
        return {
          error: 'Invalid token format'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[21][1]++;
      }
      const token =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[72]++, parts[1]);
      // Validation basique du token (non vide, longueur minimale)
      /* istanbul ignore next */
      cov_1egijtk2j1().s[73]++;
      if (
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[24][0]++, !token) ||
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[24][1]++, token.length < 10)) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[23][0]++;
        cov_1egijtk2j1().s[74]++;
        this.logger.warn('Token too short or empty');
        /* istanbul ignore next */
        cov_1egijtk2j1().s[75]++;
        return {
          error: 'Invalid token format'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[23][1]++;
      }
      cov_1egijtk2j1().s[76]++;
      return {
        token
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1egijtk2j1().s[77]++;
      this.logger.error('Error extracting token from request', error);
      /* istanbul ignore next */
      cov_1egijtk2j1().s[78]++;
      return {
        error: 'Invalid token format'
      };
    }
  }
  /**
   * Recherche d'une validation en cache
   *
   * @param token - Token JWT à vérifier
   * @returns Utilisateur si trouvé en cache, undefined sinon
   */
  async getCachedValidation(token) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[6]++;
    cov_1egijtk2j1().s[79]++;
    try {
      const cacheKey =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[80]++, this.buildCacheKey(token));
      const cachedData =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[81]++, await this.cacheService.get(cacheKey));
      /* istanbul ignore next */
      cov_1egijtk2j1().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[26][0]++, cachedData) &&
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[26][1]++, (0, user_interface_1.isValidUser)(cachedData))) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[25][0]++;
        cov_1egijtk2j1().s[83]++;
        return cachedData;
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[25][1]++;
      }
      cov_1egijtk2j1().s[84]++;
      return undefined;
    } catch (error) {
      /* istanbul ignore next */
      cov_1egijtk2j1().s[85]++;
      this.logger.warn('Cache retrieval failed, falling back to service validation', error);
      /* istanbul ignore next */
      cov_1egijtk2j1().s[86]++;
      return undefined;
    }
  }
  /**
   * Validation du token via le Service d'Authentification (C03)
   *
   * @param token - Token JWT à valider
   * @returns Utilisateur validé
   */
  async validateTokenWithAuthService(token) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[7]++;
    cov_1egijtk2j1().s[87]++;
    try {
      // URL corrigée pour correspondre aux tests existants
      const validationUrl =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[88]++, `${this.AUTH_SERVICE_URL}/auth/validate`);
      const response$ =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[89]++, this.httpService.post(validationUrl, {
        token
      }, {
        timeout: this.VALIDATION_TIMEOUT,
        headers: {
          'Content-Type': 'application/json',
          'User-Agent': 'project-service/1.0.0'
        }
      }).pipe((0, rxjs_1.timeout)(this.VALIDATION_TIMEOUT), (0, rxjs_1.catchError)(error => {
        /* istanbul ignore next */
        cov_1egijtk2j1().f[8]++;
        cov_1egijtk2j1().s[90]++;
        // Gestion spécifique selon le type d'erreur Axios
        if (error.response?.status === 401) {
          /* istanbul ignore next */
          cov_1egijtk2j1().b[27][0]++;
          cov_1egijtk2j1().s[91]++;
          throw new common_1.UnauthorizedException('Authentication failed');
        } else
        /* istanbul ignore next */
        {
          cov_1egijtk2j1().b[27][1]++;
        }
        cov_1egijtk2j1().s[92]++;
        if (error.response?.status === 400) {
          /* istanbul ignore next */
          cov_1egijtk2j1().b[28][0]++;
          cov_1egijtk2j1().s[93]++;
          throw new common_1.UnauthorizedException('Authentication failed');
        } else
        /* istanbul ignore next */
        {
          cov_1egijtk2j1().b[28][1]++;
        }
        // Erreurs de connexion et timeout
        cov_1egijtk2j1().s[94]++;
        if (
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[30][0]++, error.code === 'ECONNREFUSED') ||
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[30][1]++, error.code === 'ENOTFOUND') ||
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[30][2]++, error.name === 'TimeoutError') ||
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[30][3]++, error.message?.includes('timeout'))) {
          /* istanbul ignore next */
          cov_1egijtk2j1().b[29][0]++;
          cov_1egijtk2j1().s[95]++;
          throw new common_1.ServiceUnavailableException('Authentication service unavailable');
        } else
        /* istanbul ignore next */
        {
          cov_1egijtk2j1().b[29][1]++;
        }
        // Autres erreurs -> ServiceUnavailableException pour tests
        cov_1egijtk2j1().s[96]++;
        throw new common_1.ServiceUnavailableException('Authentication service unavailable');
      })));
      const response =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[97]++, await (0, rxjs_1.firstValueFrom)(response$));
      const data =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[98]++, response.data);
      // Validation de la réponse
      /* istanbul ignore next */
      cov_1egijtk2j1().s[99]++;
      if (
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[32][0]++, !data.valid) ||
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[32][1]++, !data.user)) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[31][0]++;
        cov_1egijtk2j1().s[100]++;
        throw new common_1.UnauthorizedException('Authentication failed');
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[31][1]++;
      }
      // Construction de l'objet User
      const user =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[101]++, {
        id: data.user.id,
        email: data.user.email,
        roles:
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[33][0]++, data.user.roles) ||
        /* istanbul ignore next */
        (cov_1egijtk2j1().b[33][1]++, [])
      });
      // Validation finale de l'objet User
      /* istanbul ignore next */
      cov_1egijtk2j1().s[102]++;
      if (!(0, user_interface_1.isValidUser)(user)) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[34][0]++;
        cov_1egijtk2j1().s[103]++;
        throw new common_1.UnauthorizedException('Authentication failed');
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[34][1]++;
      }
      cov_1egijtk2j1().s[104]++;
      return user;
    } catch (error) {
      /* istanbul ignore next */
      cov_1egijtk2j1().s[105]++;
      if (
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[36][0]++, error instanceof common_1.UnauthorizedException) ||
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[36][1]++, error instanceof common_1.ServiceUnavailableException) ||
      /* istanbul ignore next */
      (cov_1egijtk2j1().b[36][2]++, error instanceof common_1.InternalServerErrorException)) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[35][0]++;
        cov_1egijtk2j1().s[106]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_1egijtk2j1().b[35][1]++;
      }
      cov_1egijtk2j1().s[107]++;
      this.logger.error('Unexpected error during token validation', error);
      /* istanbul ignore next */
      cov_1egijtk2j1().s[108]++;
      throw new common_1.UnauthorizedException('Authentication failed');
    }
  }
  /**
   * Mise en cache de la validation réussie
   *
   * @param token - Token JWT
   * @param user - Utilisateur validé
   * @param expiresAt - Date d'expiration du token
   */
  async cacheValidation(token, user, expiresAt) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[9]++;
    cov_1egijtk2j1().s[109]++;
    try {
      const cacheKey =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[110]++, this.buildCacheKey(token));
      // Calcul du TTL intelligent basé sur l'expiration du token
      const timeUntilExpiry =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[111]++, Math.floor((expiresAt.getTime() - Date.now()) / 1000));
      const ttl =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[112]++, Math.min(this.CACHE_TTL, Math.max(timeUntilExpiry, 60))); // Min 1 minute
      /* istanbul ignore next */
      cov_1egijtk2j1().s[113]++;
      await this.cacheService.set(cacheKey, user, ttl);
    } catch (error) {
      /* istanbul ignore next */
      cov_1egijtk2j1().s[114]++;
      // Cache non critique - on log mais on ne bloque pas
      this.logger.warn('Failed to cache token validation', error);
    }
  }
  /**
   * Injection de l'utilisateur dans le contexte de requête
   *
   * @param context - Contexte d'exécution
   * @param user - Utilisateur à injecter
   */
  injectUserIntoContext(context, user) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[10]++;
    cov_1egijtk2j1().s[115]++;
    try {
      const request =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[116]++, this.getRequest(context));
      // Injection pour utilisation par le décorateur @CurrentUser()
      /* istanbul ignore next */
      cov_1egijtk2j1().s[117]++;
      request.user = user;
    } catch (error) {
      /* istanbul ignore next */
      cov_1egijtk2j1().s[118]++;
      this.logger.error('Failed to inject user into context', error);
      /* istanbul ignore next */
      cov_1egijtk2j1().s[119]++;
      throw new common_1.InternalServerErrorException('Context injection failed');
    }
  }
  /**
   * Audit des tentatives d'accès pour la sécurité et le monitoring
   *
   * @param tokenHash - Hash du token (pour la sécurité)
   * @param success - Succès ou échec de l'authentification
   * @param user - Utilisateur (si authentification réussie)
   * @param error - Erreur (si authentification échouée)
   * @param cacheHit - Indicateur de cache hit
   * @param duration - Durée de validation en ms
   */
  async auditAccessAttempt(tokenHash, success, user, error, cacheHit, duration) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[11]++;
    cov_1egijtk2j1().s[120]++;
    try {
      const auditData =
      /* istanbul ignore next */
      (cov_1egijtk2j1().s[121]++, {
        event: 'auth_attempt',
        success,
        tokenHash: tokenHash.substring(0, 16),
        // Premiers 16 caractères pour l'audit
        timestamp: new Date().toISOString(),
        userId: user?.id,
        error: error?.message,
        cachehit: cacheHit,
        validationDuration: duration
      });
      /* istanbul ignore next */
      cov_1egijtk2j1().s[122]++;
      if (success) {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[37][0]++;
        cov_1egijtk2j1().s[123]++;
        this.logger.log(`✅ Authentication successful for user ${user?.email}`, auditData);
      } else {
        /* istanbul ignore next */
        cov_1egijtk2j1().b[37][1]++;
        cov_1egijtk2j1().s[124]++;
        this.logger.warn(`❌ Authentication failed: ${error?.message}`, auditData);
      }
      // TODO: Optionnellement envoyer vers un service d'audit externe
      // await this.auditService.logSecurityEvent(auditData);
    } catch (auditError) {
      /* istanbul ignore next */
      cov_1egijtk2j1().s[125]++;
      // L'audit ne doit jamais bloquer l'authentification
      this.logger.error('Audit logging failed', auditError);
    }
  }
  /**
   * Gestion centralisée des erreurs d'authentification
   *
   * @param error - Erreur à traiter
   * @param context - Contexte où l'erreur s'est produite
   */
  handleAuthError(error, context) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[12]++;
    cov_1egijtk2j1().s[126]++;
    // Classification et transformation des erreurs
    if (
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[39][0]++, error instanceof common_1.UnauthorizedException) ||
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[39][1]++, error instanceof common_1.ServiceUnavailableException) ||
    /* istanbul ignore next */
    (cov_1egijtk2j1().b[39][2]++, error instanceof common_1.InternalServerErrorException)) {
      /* istanbul ignore next */
      cov_1egijtk2j1().b[38][0]++;
      cov_1egijtk2j1().s[127]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_1egijtk2j1().b[38][1]++;
    }
    // Erreurs inattendues
    cov_1egijtk2j1().s[128]++;
    this.logger.error(`Unexpected authentication error in ${context}`, error);
    // Ne pas leak d'informations sensibles
    /* istanbul ignore next */
    cov_1egijtk2j1().s[129]++;
    throw new common_1.UnauthorizedException('Authentication failed');
  }
  /**
   * Construction de la clé de cache sécurisée
   *
   * @param token - Token JWT
   * @returns Clé de cache hashée
   */
  buildCacheKey(token) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[13]++;
    const hash =
    /* istanbul ignore next */
    (cov_1egijtk2j1().s[130]++, this.hashToken(token));
    /* istanbul ignore next */
    cov_1egijtk2j1().s[131]++;
    return `${DEFAULT_CONFIG.cachePrefix}${hash}`;
  }
  /**
   * Génération d'un hash SHA-256 du token pour la sécurité
   *
   * @param token - Token à hasher
   * @returns Hash SHA-256 en hexadécimal
   */
  hashToken(token) {
    /* istanbul ignore next */
    cov_1egijtk2j1().f[14]++;
    cov_1egijtk2j1().s[132]++;
    return (0, crypto_1.createHash)('sha256').update(token).digest('hex');
  }
});
/* istanbul ignore next */
cov_1egijtk2j1().s[133]++;
exports.AuthGuard = AuthGuard;
/* istanbul ignore next */
cov_1egijtk2j1().s[134]++;
exports.AuthGuard = AuthGuard = AuthGuard_1 = __decorate([(0, common_1.Injectable)(), __metadata("design:paramtypes", [config_1.ConfigService, cache_service_1.CacheService, axios_1.HttpService])], AuthGuard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,