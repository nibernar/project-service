window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":3,"numPassedTests":95,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":98,"startTime":1753542866109,"success":false,"testResults":[{"numFailingTests":3,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1753542957588,"runtime":91439,"slow":true,"start":1753542866149},"testFilePath":"/Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDatabaseService - Lifecycle Tests › onModuleInit() › ❌ Connection Retry Scenarios › should retry connection with exponential backoff\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 30000 ms for a test.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 |\u001b[39m       }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 111 |\u001b[39m       it(\u001b[32m'should retry connection with exponential backoff'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 112 |\u001b[39m         \u001b[36mconst\u001b[39m timerMocks \u001b[33m=\u001b[39m setupRetryMocks()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 113 |\u001b[39m         \u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m         \u001b[36mconst\u001b[39m mockConnect \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mspyOn(service\u001b[33m,\u001b[39m \u001b[32m'$connect'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:111:7\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:94:5\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:35:3\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:11:1)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDatabaseService - Lifecycle Tests › onModuleInit() › ❌ Connection Retry Scenarios › should fail after max retries exceeded\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 30000 ms for a test.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 147 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 148 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 149 |\u001b[39m       it(\u001b[32m'should fail after max retries exceeded'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 150 |\u001b[39m         \u001b[36mconst\u001b[39m timerMocks \u001b[33m=\u001b[39m setupRetryMocks()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 151 |\u001b[39m         \u001b[22m\n\u001b[2m     \u001b[90m 152 |\u001b[39m         \u001b[36mconst\u001b[39m mockConnect \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mspyOn(service\u001b[33m,\u001b[39m \u001b[32m'$connect'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:149:7\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:94:5\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:35:3\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:11:1)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDatabaseService - Lifecycle Tests › onModuleInit() › ❌ Connection Retry Scenarios › should handle different connection error types\u001b[39m\u001b[22m\n\n    thrown: \"Exceeded timeout of 30000 ms for a test.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 174 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 175 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 176 |\u001b[39m       it(\u001b[32m'should handle different connection error types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 177 |\u001b[39m         \u001b[36mconst\u001b[39m scenarios \u001b[33m=\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 178 |\u001b[39m           { error\u001b[33m:\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'ECONNREFUSED'\u001b[39m)\u001b[33m,\u001b[39m expectedLog\u001b[33m:\u001b[39m \u001b[32m'Database connection refused'\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 179 |\u001b[39m           { error\u001b[33m:\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'authentication failed'\u001b[39m)\u001b[33m,\u001b[39m expectedLog\u001b[33m:\u001b[39m \u001b[32m'Database authentication failed'\u001b[39m }\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:176:7\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:94:5\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:35:3\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/common/database/database.service.lifecycle.spec.ts\u001b[39m\u001b[0m\u001b[2m:11:1)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","✅ Successful Connection Scenarios"],"duration":349,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ✅ Successful Connection Scenarios should connect successfully on first attempt","status":"passed","title":"should connect successfully on first attempt"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","✅ Successful Connection Scenarios"],"duration":4,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ✅ Successful Connection Scenarios should set health status to healthy after successful connection","status":"passed","title":"should set health status to healthy after successful connection"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","✅ Successful Connection Scenarios"],"duration":3,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ✅ Successful Connection Scenarios should update health metrics after connection","status":"passed","title":"should update health metrics after connection"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","✅ Successful Connection Scenarios"],"duration":11,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ✅ Successful Connection Scenarios should start health monitoring in production","status":"passed","title":"should start health monitoring in production"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","❌ Connection Retry Scenarios"],"duration":30008,"failureMessages":["Error: thrown: \"Exceeded timeout of 30000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at /Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:111:7\n    at _dispatchDescribe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:55:5)\n    at /Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:94:5\n    at _dispatchDescribe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:55:5)\n    at /Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:35:3\n    at _dispatchDescribe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:55:5)\n    at Object.<anonymous> (/Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:11:1)\n    at Runtime._execModule (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runtime/build/index.js:1439:24)\n    at Runtime._loadModule (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runtime/build/index.js:1022:12)\n    at Runtime.requireModule (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runtime/build/index.js:882:12)\n    at jestAdapter (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at runTestInternal (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ❌ Connection Retry Scenarios should retry connection with exponential backoff","status":"failed","title":"should retry connection with exponential backoff"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","❌ Connection Retry Scenarios"],"duration":30010,"failureMessages":["Error: thrown: \"Exceeded timeout of 30000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at /Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:149:7\n    at _dispatchDescribe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:55:5)\n    at /Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:94:5\n    at _dispatchDescribe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:55:5)\n    at /Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:35:3\n    at _dispatchDescribe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:55:5)\n    at Object.<anonymous> (/Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:11:1)\n    at Runtime._execModule (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runtime/build/index.js:1439:24)\n    at Runtime._loadModule (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runtime/build/index.js:1022:12)\n    at Runtime.requireModule (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runtime/build/index.js:882:12)\n    at jestAdapter (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at runTestInternal (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ❌ Connection Retry Scenarios should fail after max retries exceeded","status":"failed","title":"should fail after max retries exceeded"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","❌ Connection Retry Scenarios"],"duration":30023,"failureMessages":["Error: thrown: \"Exceeded timeout of 30000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at /Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:176:7\n    at _dispatchDescribe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:55:5)\n    at /Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:94:5\n    at _dispatchDescribe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:55:5)\n    at /Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:35:3\n    at _dispatchDescribe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/index.js:55:5)\n    at Object.<anonymous> (/Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.lifecycle.spec.ts:11:1)\n    at Runtime._execModule (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runtime/build/index.js:1439:24)\n    at Runtime._loadModule (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runtime/build/index.js:1022:12)\n    at Runtime.requireModule (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runtime/build/index.js:882:12)\n    at jestAdapter (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at runTestInternal (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nicolasbernard/Desktop/project-service/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ❌ Connection Retry Scenarios should handle different connection error types","status":"failed","title":"should handle different connection error types"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","❌ Connection Retry Scenarios"],"duration":40,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ❌ Connection Retry Scenarios should not start monitoring in development/test","status":"passed","title":"should not start monitoring in development/test"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","❌ Edge Cases - onModuleInit"],"duration":30,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ❌ Edge Cases - onModuleInit should handle connection success but query failure","status":"passed","title":"should handle connection success but query failure"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleInit()","❌ Edge Cases - onModuleInit"],"duration":17,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleInit() ❌ Edge Cases - onModuleInit should handle partial connection state","status":"passed","title":"should handle partial connection state"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleDestroy()","✅ Successful Disconnection"],"duration":15,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleDestroy() ✅ Successful Disconnection should disconnect cleanly","status":"passed","title":"should disconnect cleanly"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleDestroy()","✅ Successful Disconnection"],"duration":13,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleDestroy() ✅ Successful Disconnection should handle multiple destroy calls gracefully","status":"passed","title":"should handle multiple destroy calls gracefully"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleDestroy()","❌ Disconnection Errors"],"duration":19,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleDestroy() ❌ Disconnection Errors should handle disconnect errors gracefully","status":"passed","title":"should handle disconnect errors gracefully"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleDestroy()","❌ Disconnection Errors"],"duration":18,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleDestroy() ❌ Disconnection Errors should handle timeout during disconnect","status":"passed","title":"should handle timeout during disconnect"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","onModuleDestroy()","❌ Disconnection Errors"],"duration":66,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests onModuleDestroy() ❌ Disconnection Errors should handle disconnect when never connected","status":"passed","title":"should handle disconnect when never connected"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","Lifecycle Integration"],"duration":69,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests Lifecycle Integration should handle full lifecycle correctly","status":"passed","title":"should handle full lifecycle correctly"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","Lifecycle Integration"],"duration":41,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests Lifecycle Integration should handle init failure followed by destroy","status":"passed","title":"should handle init failure followed by destroy"},{"ancestorTitles":["DatabaseService - Lifecycle Tests","Lifecycle Integration"],"duration":9,"failureMessages":[],"fullName":"DatabaseService - Lifecycle Tests Lifecycle Integration should handle sequential init/destroy calls","status":"passed","title":"should handle sequential init/destroy calls"}]},{"numFailingTests":0,"numPassingTests":29,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1753542965133,"runtime":7440,"slow":true,"start":1753542957693},"testFilePath":"/Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseService - Unit Tests","Construction and Configuration"],"duration":18,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Construction and Configuration should be defined","status":"passed","title":"should be defined"},{"ancestorTitles":["DatabaseService - Unit Tests","Construction and Configuration"],"duration":109,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Construction and Configuration should throw error when DATABASE_URL is missing","status":"passed","title":"should throw error when DATABASE_URL is missing"},{"ancestorTitles":["DatabaseService - Unit Tests","Construction and Configuration"],"duration":36,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Construction and Configuration should configure different log levels per environment","status":"passed","title":"should configure different log levels per environment"},{"ancestorTitles":["DatabaseService - Unit Tests","Construction and Configuration"],"duration":37,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Construction and Configuration should set correct transaction options from config","status":"passed","title":"should set correct transaction options from config"},{"ancestorTitles":["DatabaseService - Unit Tests","Construction and Configuration"],"duration":23,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Construction and Configuration should handle malformed DATABASE_URL gracefully","status":"passed","title":"should handle malformed DATABASE_URL gracefully"},{"ancestorTitles":["DatabaseService - Unit Tests","Construction and Configuration"],"duration":30,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Construction and Configuration should use default values when config values are missing","status":"passed","title":"should use default values when config values are missing"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","isHealthy()"],"duration":62,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods isHealthy() should return true for fast response","status":"passed","title":"should return true for fast response"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","isHealthy()"],"duration":6056,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods isHealthy() should return false for slow response","status":"passed","title":"should return false for slow response"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","isHealthy()"],"duration":16,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods isHealthy() should return false on query failure","status":"passed","title":"should return false on query failure"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","isHealthy()"],"duration":33,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods isHealthy() should update responseTime metric","status":"passed","title":"should update responseTime metric"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","isHealthy()"],"duration":9,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods isHealthy() should update lastSuccessfulQuery timestamp","status":"passed","title":"should update lastSuccessfulQuery timestamp"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","isHealthy()"],"duration":19,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods isHealthy() should increment error count on failure","status":"passed","title":"should increment error count on failure"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","getConnectionStatus()"],"duration":37,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods getConnectionStatus() should return connection details on success","status":"passed","title":"should return connection details on success"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","getConnectionStatus()"],"duration":31,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods getConnectionStatus() should return failure details on error","status":"passed","title":"should return failure details on error"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","getHealthMetrics()"],"duration":18,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods getHealthMetrics() should return current health metrics","status":"passed","title":"should return current health metrics"},{"ancestorTitles":["DatabaseService - Unit Tests","Health Check Methods","getHealthMetrics()"],"duration":19,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Health Check Methods getHealthMetrics() should return a copy of metrics (not reference)","status":"passed","title":"should return a copy of metrics (not reference)"},{"ancestorTitles":["DatabaseService - Unit Tests","Transaction Management","withTransaction()"],"duration":31,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Transaction Management withTransaction() should execute callback within transaction","status":"passed","title":"should execute callback within transaction"},{"ancestorTitles":["DatabaseService - Unit Tests","Transaction Management","withTransaction()"],"duration":15,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Transaction Management withTransaction() should return callback result","status":"passed","title":"should return callback result"},{"ancestorTitles":["DatabaseService - Unit Tests","Transaction Management","withTransaction()"],"duration":14,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Transaction Management withTransaction() should use default transaction options","status":"passed","title":"should use default transaction options"},{"ancestorTitles":["DatabaseService - Unit Tests","Transaction Management","withTransaction()"],"duration":11,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Transaction Management withTransaction() should use custom transaction options","status":"passed","title":"should use custom transaction options"},{"ancestorTitles":["DatabaseService - Unit Tests","Transaction Management","withTransaction()"],"duration":19,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Transaction Management withTransaction() should rollback on callback exception","status":"passed","title":"should rollback on callback exception"},{"ancestorTitles":["DatabaseService - Unit Tests","Transaction Management","withTransaction()"],"duration":14,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Transaction Management withTransaction() should increment error count on transaction failure","status":"passed","title":"should increment error count on transaction failure"},{"ancestorTitles":["DatabaseService - Unit Tests","Transaction Management","withTransaction()"],"duration":18,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Transaction Management withTransaction() should handle transaction timeout","status":"passed","title":"should handle transaction timeout"},{"ancestorTitles":["DatabaseService - Unit Tests","Transaction Management","withTransaction()"],"duration":35,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Transaction Management withTransaction() should handle invalid isolation level","status":"passed","title":"should handle invalid isolation level"},{"ancestorTitles":["DatabaseService - Unit Tests","Error Handling"],"duration":11,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Error Handling should handle database connection errors","status":"passed","title":"should handle database connection errors"},{"ancestorTitles":["DatabaseService - Unit Tests","Error Handling"],"duration":17,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Error Handling should handle timeout errors","status":"passed","title":"should handle timeout errors"},{"ancestorTitles":["DatabaseService - Unit Tests","Error Handling"],"duration":11,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Error Handling should handle authentication errors","status":"passed","title":"should handle authentication errors"},{"ancestorTitles":["DatabaseService - Unit Tests","Logging and Monitoring"],"duration":11,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Logging and Monitoring should log debug messages for transactions","status":"passed","title":"should log debug messages for transactions"},{"ancestorTitles":["DatabaseService - Unit Tests","Logging and Monitoring"],"duration":9,"failureMessages":[],"fullName":"DatabaseService - Unit Tests Logging and Monitoring should log errors appropriately","status":"passed","title":"should log errors appropriately"}]},{"numFailingTests":0,"numPassingTests":22,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1753542967909,"runtime":2740,"slow":false,"start":1753542965169},"testFilePath":"/Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.security.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseService - Security Tests","🔒 Configuration Security"],"duration":96,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔒 Configuration Security should not log sensitive information","status":"passed","title":"should not log sensitive information"},{"ancestorTitles":["DatabaseService - Security Tests","🔒 Configuration Security"],"duration":437,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔒 Configuration Security should validate connection string format securely","status":"passed","title":"should validate connection string format securely"},{"ancestorTitles":["DatabaseService - Security Tests","🔒 Configuration Security"],"duration":36,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔒 Configuration Security should handle invalid credentials without exposure","status":"passed","title":"should handle invalid credentials without exposure"},{"ancestorTitles":["DatabaseService - Security Tests","🔒 Configuration Security"],"duration":15,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔒 Configuration Security should use secure connection settings in production","status":"passed","title":"should use secure connection settings in production"},{"ancestorTitles":["DatabaseService - Security Tests","🛡️ SQL Injection Protection"],"duration":12,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🛡️ SQL Injection Protection should protect against SQL injection in raw queries","status":"passed","title":"should protect against SQL injection in raw queries"},{"ancestorTitles":["DatabaseService - Security Tests","🛡️ SQL Injection Protection"],"duration":33,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🛡️ SQL Injection Protection should handle special characters safely","status":"passed","title":"should handle special characters safely"},{"ancestorTitles":["DatabaseService - Security Tests","🛡️ SQL Injection Protection"],"duration":22,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🛡️ SQL Injection Protection should prevent query manipulation through parameters","status":"passed","title":"should prevent query manipulation through parameters"},{"ancestorTitles":["DatabaseService - Security Tests","🔐 Access Control and Authorization"],"duration":74,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔐 Access Control and Authorization should enforce environment-based operation restrictions","status":"passed","title":"should enforce environment-based operation restrictions"},{"ancestorTitles":["DatabaseService - Security Tests","🔐 Access Control and Authorization"],"duration":100,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔐 Access Control and Authorization should validate user permissions for operations","status":"passed","title":"should validate user permissions for operations"},{"ancestorTitles":["DatabaseService - Security Tests","🔐 Access Control and Authorization"],"duration":21,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔐 Access Control and Authorization should prevent unauthorized database schema access","status":"passed","title":"should prevent unauthorized database schema access"},{"ancestorTitles":["DatabaseService - Security Tests","🚫 Data Validation and Sanitization"],"duration":18,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🚫 Data Validation and Sanitization should validate input data types and formats","status":"passed","title":"should validate input data types and formats"},{"ancestorTitles":["DatabaseService - Security Tests","🚫 Data Validation and Sanitization"],"duration":18,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🚫 Data Validation and Sanitization should sanitize potentially dangerous input","status":"passed","title":"should sanitize potentially dangerous input"},{"ancestorTitles":["DatabaseService - Security Tests","🚫 Data Validation and Sanitization"],"duration":21,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🚫 Data Validation and Sanitization should handle very long inputs safely","status":"passed","title":"should handle very long inputs safely"},{"ancestorTitles":["DatabaseService - Security Tests","🔍 Information Disclosure Prevention"],"duration":11,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔍 Information Disclosure Prevention should not expose database structure in errors","status":"passed","title":"should not expose database structure in errors"},{"ancestorTitles":["DatabaseService - Security Tests","🔍 Information Disclosure Prevention"],"duration":16,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔍 Information Disclosure Prevention should not leak sensitive configuration in health metrics","status":"passed","title":"should not leak sensitive configuration in health metrics"},{"ancestorTitles":["DatabaseService - Security Tests","🔍 Information Disclosure Prevention"],"duration":15,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔍 Information Disclosure Prevention should sanitize error messages for external consumption","status":"passed","title":"should sanitize error messages for external consumption"},{"ancestorTitles":["DatabaseService - Security Tests","⚡ Resource Exhaustion Protection"],"duration":185,"failureMessages":[],"fullName":"DatabaseService - Security Tests ⚡ Resource Exhaustion Protection should prevent connection pool exhaustion","status":"passed","title":"should prevent connection pool exhaustion"},{"ancestorTitles":["DatabaseService - Security Tests","⚡ Resource Exhaustion Protection"],"duration":13,"failureMessages":[],"fullName":"DatabaseService - Security Tests ⚡ Resource Exhaustion Protection should handle memory exhaustion gracefully","status":"passed","title":"should handle memory exhaustion gracefully"},{"ancestorTitles":["DatabaseService - Security Tests","⚡ Resource Exhaustion Protection"],"duration":1014,"failureMessages":[],"fullName":"DatabaseService - Security Tests ⚡ Resource Exhaustion Protection should enforce query timeouts","status":"passed","title":"should enforce query timeouts"},{"ancestorTitles":["DatabaseService - Security Tests","🔒 Audit and Monitoring Security"],"duration":15,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔒 Audit and Monitoring Security should log security-relevant events appropriately","status":"passed","title":"should log security-relevant events appropriately"},{"ancestorTitles":["DatabaseService - Security Tests","🔒 Audit and Monitoring Security"],"duration":92,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔒 Audit and Monitoring Security should not log sensitive data in audit trails","status":"passed","title":"should not log sensitive data in audit trails"},{"ancestorTitles":["DatabaseService - Security Tests","🔒 Audit and Monitoring Security"],"duration":12,"failureMessages":[],"fullName":"DatabaseService - Security Tests 🔒 Audit and Monitoring Security should track failed authentication attempts","status":"passed","title":"should track failed authentication attempts"}]},{"numFailingTests":0,"numPassingTests":29,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1753542968825,"runtime":880,"slow":false,"start":1753542967945},"testFilePath":"/Users/nicolasbernard/Desktop/project-service/test/unit/common/database/database.service.utilities.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DatabaseService - Utilities Tests","Basic functionality"],"duration":21,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests Basic functionality should be defined","status":"passed","title":"should be defined"},{"ancestorTitles":["DatabaseService - Utilities Tests","Basic functionality"],"duration":16,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests Basic functionality should have utility methods","status":"passed","title":"should have utility methods"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","✅ Test Environment - Allowed Operations"],"duration":14,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ✅ Test Environment - Allowed Operations should reset database in test environment","status":"passed","title":"should reset database in test environment"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","✅ Test Environment - Allowed Operations"],"duration":19,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ✅ Test Environment - Allowed Operations should delete data in correct order (foreign key constraints)","status":"passed","title":"should delete data in correct order (foreign key constraints)"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","✅ Test Environment - Allowed Operations"],"duration":15,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ✅ Test Environment - Allowed Operations should handle empty database during reset","status":"passed","title":"should handle empty database during reset"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","❌ Production Environment - Forbidden Operations"],"duration":51,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ❌ Production Environment - Forbidden Operations should throw error in production environment","status":"passed","title":"should throw error in production environment"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","❌ Production Environment - Forbidden Operations"],"duration":13,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ❌ Production Environment - Forbidden Operations should not execute any database operations in production","status":"passed","title":"should not execute any database operations in production"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","❌ Development Environment - Forbidden Operations"],"duration":12,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ❌ Development Environment - Forbidden Operations should throw error in development environment","status":"passed","title":"should throw error in development environment"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","❌ Edge Cases - resetDatabase"],"duration":14,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ❌ Edge Cases - resetDatabase should handle foreign key constraint errors","status":"passed","title":"should handle foreign key constraint errors"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","❌ Edge Cases - resetDatabase"],"duration":13,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ❌ Edge Cases - resetDatabase should handle database errors during reset","status":"passed","title":"should handle database errors during reset"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","❌ Edge Cases - resetDatabase"],"duration":21,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ❌ Edge Cases - resetDatabase should handle transaction timeout during reset","status":"passed","title":"should handle transaction timeout during reset"},{"ancestorTitles":["DatabaseService - Utilities Tests","resetDatabase()","❌ Edge Cases - resetDatabase"],"duration":16,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests resetDatabase() ❌ Edge Cases - resetDatabase should handle undefined NODE_ENV as non-test","status":"passed","title":"should handle undefined NODE_ENV as non-test"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","✅ Development Environment - Allowed Operations"],"duration":14,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ✅ Development Environment - Allowed Operations should seed database in development","status":"passed","title":"should seed database in development"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","✅ Development Environment - Allowed Operations"],"duration":9,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ✅ Development Environment - Allowed Operations should skip duplicates during seeding","status":"passed","title":"should skip duplicates during seeding"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","✅ Development Environment - Allowed Operations"],"duration":14,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ✅ Development Environment - Allowed Operations should return count of seeded records","status":"passed","title":"should return count of seeded records"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","✅ Test Environment - Allowed Operations"],"duration":10,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ✅ Test Environment - Allowed Operations should seed database in test environment","status":"passed","title":"should seed database in test environment"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","❌ Production Environment - Forbidden Operations"],"duration":11,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ❌ Production Environment - Forbidden Operations should throw error in production","status":"passed","title":"should throw error in production"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","❌ Production Environment - Forbidden Operations"],"duration":11,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ❌ Production Environment - Forbidden Operations should not execute any database operations in production","status":"passed","title":"should not execute any database operations in production"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","❌ Edge Cases - seedDatabase"],"duration":19,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ❌ Edge Cases - seedDatabase should handle constraint violations during seed","status":"passed","title":"should handle constraint violations during seed"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","❌ Edge Cases - seedDatabase"],"duration":12,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ❌ Edge Cases - seedDatabase should handle database errors during seed","status":"passed","title":"should handle database errors during seed"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","❌ Edge Cases - seedDatabase"],"duration":8,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ❌ Edge Cases - seedDatabase should handle zero records created","status":"passed","title":"should handle zero records created"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","❌ Edge Cases - seedDatabase"],"duration":9,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ❌ Edge Cases - seedDatabase should handle malformed seed data","status":"passed","title":"should handle malformed seed data"},{"ancestorTitles":["DatabaseService - Utilities Tests","seedDatabase()","❌ Edge Cases - seedDatabase"],"duration":9,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests seedDatabase() ❌ Edge Cases - seedDatabase should handle partial seed success","status":"passed","title":"should handle partial seed success"},{"ancestorTitles":["DatabaseService - Utilities Tests","Environment Detection Edge Cases"],"duration":10,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests Environment Detection Edge Cases should handle undefined NODE_ENV","status":"passed","title":"should handle undefined NODE_ENV"},{"ancestorTitles":["DatabaseService - Utilities Tests","Environment Detection Edge Cases"],"duration":14,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests Environment Detection Edge Cases should handle empty string NODE_ENV","status":"passed","title":"should handle empty string NODE_ENV"},{"ancestorTitles":["DatabaseService - Utilities Tests","Environment Detection Edge Cases"],"duration":14,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests Environment Detection Edge Cases should handle case-sensitive environment names","status":"passed","title":"should handle case-sensitive environment names"},{"ancestorTitles":["DatabaseService - Utilities Tests","Environment Detection Edge Cases"],"duration":22,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests Environment Detection Edge Cases should handle invalid environment names","status":"passed","title":"should handle invalid environment names"},{"ancestorTitles":["DatabaseService - Utilities Tests","Utilities Integration"],"duration":17,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests Utilities Integration should handle reset followed by seed","status":"passed","title":"should handle reset followed by seed"},{"ancestorTitles":["DatabaseService - Utilities Tests","Utilities Integration"],"duration":13,"failureMessages":[],"fullName":"DatabaseService - Utilities Tests Utilities Integration should handle concurrent utility operations","status":"passed","title":"should handle concurrent utility operations"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/database/**/*.ts","!src/**/*.spec.ts","!src/**/*.test.ts","!src/**/*.d.ts"],"coverageDirectory":"/Users/nicolasbernard/Desktop/project-service/coverage/database","coverageProvider":"babel","coverageReporters":["html","lcov","text-summary"],"detectLeaks":false,"detectOpenHandles":true,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":true,"globalSetup":"/Users/nicolasbernard/Desktop/project-service/test/setup/global-setup.ts","globalTeardown":"/Users/nicolasbernard/Desktop/project-service/test/setup/global-teardown.ts","json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/nicolasbernard/Desktop/project-service/node_modules/jest-html-reporters/index.js",{"publicPath":"./test-results/database","filename":"database-report.html","expand":true,"hideIcon":false,"pageTitle":"Database Service Tests","inlineSource":false}],["/Users/nicolasbernard/Desktop/project-service/node_modules/jest-junit/index.js",{"outputDirectory":"./test-results/database","outputName":"database-tests.xml","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" › ","usePathForSuiteName":true}]],"rootDir":"/Users/nicolasbernard/Desktop/project-service","runTestsByPath":false,"seed":-526247336,"silent":false,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"unit","testSequencer":"/Users/nicolasbernard/Desktop/project-service/node_modules/@jest/test-sequencer/build/index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":false,"watch":false,"watchAll":false,"watchman":true,"workerIdleMemoryLimit":1000000000,"workerThreads":false},"endTime":1753542968840,"_reporterOptions":{"publicPath":"./test-results/database","filename":"database-report.html","expand":true,"pageTitle":"Database Service Tests","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})