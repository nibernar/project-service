<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="63" failures="0" errors="0" time="1.757">
  <testsuite name="User Interface - Tests Principaux" errors="0" failures="0" skipped="0" timestamp="2025-08-02T13:21:51" time="1.614" tests="63">
    <testcase classname="User Interface - Tests Principaux Interface User devrait créer un utilisateur valide avec toutes les propriétés" name="User Interface - Tests Principaux Interface User devrait créer un utilisateur valide avec toutes les propriétés" time="0.002">
    </testcase>
    <testcase classname="User Interface - Tests Principaux Interface User devrait accepter un utilisateur avec des rôles multiples" name="User Interface - Tests Principaux Interface User devrait accepter un utilisateur avec des rôles multiples" time="0.001">
    </testcase>
    <testcase classname="User Interface - Tests Principaux Interface User devrait accepter un utilisateur avec roles vide" name="User Interface - Tests Principaux Interface User devrait accepter un utilisateur avec roles vide" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux UserRole Enum devrait définir toutes les valeurs de rôles" name="User Interface - Tests Principaux UserRole Enum devrait définir toutes les valeurs de rôles" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux UserRole Enum devrait permettre la comparaison avec des strings" name="User Interface - Tests Principaux UserRole Enum devrait permettre la comparaison avec des strings" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux UserRole Enum devrait être utilisable comme clé d&apos;objet" name="User Interface - Tests Principaux UserRole Enum devrait être utilisable comme clé d&apos;objet" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasRole() devrait retourner true si l&apos;utilisateur a le rôle" name="User Interface - Tests Principaux hasRole() devrait retourner true si l&apos;utilisateur a le rôle" time="0.001">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasRole() devrait retourner false si l&apos;utilisateur n&apos;a pas le rôle" name="User Interface - Tests Principaux hasRole() devrait retourner false si l&apos;utilisateur n&apos;a pas le rôle" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasRole() devrait être case-sensitive" name="User Interface - Tests Principaux hasRole() devrait être case-sensitive" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasAnyRole() devrait retourner true si l&apos;utilisateur a au moins un des rôles" name="User Interface - Tests Principaux hasAnyRole() devrait retourner true si l&apos;utilisateur a au moins un des rôles" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasAnyRole() devrait retourner false si l&apos;utilisateur n&apos;a aucun des rôles" name="User Interface - Tests Principaux hasAnyRole() devrait retourner false si l&apos;utilisateur n&apos;a aucun des rôles" time="0.001">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasAnyRole() devrait retourner false pour un tableau de rôles vide" name="User Interface - Tests Principaux hasAnyRole() devrait retourner false pour un tableau de rôles vide" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasAnyRole() devrait fonctionner avec un seul rôle dans le tableau" name="User Interface - Tests Principaux hasAnyRole() devrait fonctionner avec un seul rôle dans le tableau" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasAllRoles() devrait retourner true si l&apos;utilisateur a tous les rôles requis" name="User Interface - Tests Principaux hasAllRoles() devrait retourner true si l&apos;utilisateur a tous les rôles requis" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasAllRoles() devrait retourner false si l&apos;utilisateur n&apos;a pas tous les rôles requis" name="User Interface - Tests Principaux hasAllRoles() devrait retourner false si l&apos;utilisateur n&apos;a pas tous les rôles requis" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasAllRoles() devrait retourner true pour un tableau de rôles vide" name="User Interface - Tests Principaux hasAllRoles() devrait retourner true pour un tableau de rôles vide" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasAllRoles() devrait gérer les doublons dans les rôles requis" name="User Interface - Tests Principaux hasAllRoles() devrait gérer les doublons dans les rôles requis" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isAdmin() devrait retourner true pour un utilisateur admin" name="User Interface - Tests Principaux isAdmin() devrait retourner true pour un utilisateur admin" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isAdmin() devrait retourner false pour un utilisateur non-admin" name="User Interface - Tests Principaux isAdmin() devrait retourner false pour un utilisateur non-admin" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isAdmin() devrait fonctionner comme type guard" name="User Interface - Tests Principaux isAdmin() devrait fonctionner comme type guard" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isPremium() devrait retourner true pour un utilisateur premium" name="User Interface - Tests Principaux isPremium() devrait retourner true pour un utilisateur premium" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isPremium() devrait retourner false pour un utilisateur non-premium" name="User Interface - Tests Principaux isPremium() devrait retourner false pour un utilisateur non-premium" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createUser() devrait créer un utilisateur avec les rôles par défaut" name="User Interface - Tests Principaux createUser() devrait créer un utilisateur avec les rôles par défaut" time="0.001">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createUser() devrait créer un utilisateur avec des rôles additionnels" name="User Interface - Tests Principaux createUser() devrait créer un utilisateur avec des rôles additionnels" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createUser() devrait dédupliquer les rôles" name="User Interface - Tests Principaux createUser() devrait dédupliquer les rôles" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createUser() devrait ajouter le rôle user même s&apos;il est déjà présent" name="User Interface - Tests Principaux createUser() devrait ajouter le rôle user même s&apos;il est déjà présent" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createUser() devrait gérer un tableau de rôles vide" name="User Interface - Tests Principaux createUser() devrait gérer un tableau de rôles vide" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createExtendedUser() devrait étendre un utilisateur de base" name="User Interface - Tests Principaux createExtendedUser() devrait étendre un utilisateur de base" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createExtendedUser() devrait créer une copie sans extensions" name="User Interface - Tests Principaux createExtendedUser() devrait créer une copie sans extensions" time="0.001">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createExtendedUser() devrait préserver les propriétés originales" name="User Interface - Tests Principaux createExtendedUser() devrait préserver les propriétés originales" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isValidUser() devrait valider un utilisateur correct" name="User Interface - Tests Principaux isValidUser() devrait valider un utilisateur correct" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isValidUser() devrait rejeter un objet avec id manquant" name="User Interface - Tests Principaux isValidUser() devrait rejeter un objet avec id manquant" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isValidUser() devrait rejeter un objet avec email manquant" name="User Interface - Tests Principaux isValidUser() devrait rejeter un objet avec email manquant" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isValidUser() devrait rejeter un objet avec roles manquant" name="User Interface - Tests Principaux isValidUser() devrait rejeter un objet avec roles manquant" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isValidUser() devrait rejeter un email sans @" name="User Interface - Tests Principaux isValidUser() devrait rejeter un email sans @" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isValidUser() devrait rejeter des roles non-array" name="User Interface - Tests Principaux isValidUser() devrait rejeter des roles non-array" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isValidUser() devrait rejeter des roles avec des éléments non-string" name="User Interface - Tests Principaux isValidUser() devrait rejeter des roles avec des éléments non-string" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isValidUser() devrait accepter un utilisateur avec roles vide" name="User Interface - Tests Principaux isValidUser() devrait accepter un utilisateur avec roles vide" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isExtendedUser() devrait identifier un utilisateur étendu" name="User Interface - Tests Principaux isExtendedUser() devrait identifier un utilisateur étendu" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isExtendedUser() devrait identifier un utilisateur de base comme non-étendu" name="User Interface - Tests Principaux isExtendedUser() devrait identifier un utilisateur de base comme non-étendu" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isExtendedUser() devrait identifier comme étendu avec une seule propriété" name="User Interface - Tests Principaux isExtendedUser() devrait identifier comme étendu avec une seule propriété" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isExtendedUser() devrait identifier comme non-étendu avec propriétés undefined" name="User Interface - Tests Principaux isExtendedUser() devrait identifier comme non-étendu avec propriétés undefined" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createDefaultPreferences() devrait créer des préférences par défaut" name="User Interface - Tests Principaux createDefaultPreferences() devrait créer des préférences par défaut" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createDefaultPreferences() devrait fusionner avec les overrides" name="User Interface - Tests Principaux createDefaultPreferences() devrait fusionner avec les overrides" time="0.001">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createDefaultPreferences() devrait gérer des overrides vides" name="User Interface - Tests Principaux createDefaultPreferences() devrait gérer des overrides vides" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux createDefaultPreferences() devrait gérer des overrides partiels" name="User Interface - Tests Principaux createDefaultPreferences() devrait gérer des overrides partiels" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux getUserPreferences() devrait retourner les préférences par défaut pour un utilisateur de base" name="User Interface - Tests Principaux getUserPreferences() devrait retourner les préférences par défaut pour un utilisateur de base" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux getUserPreferences() devrait fusionner les préférences utilisateur avec les défauts" name="User Interface - Tests Principaux getUserPreferences() devrait fusionner les préférences utilisateur avec les défauts" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux getUserPreferences() devrait retourner les défauts pour un ExtendedUser sans préférences" name="User Interface - Tests Principaux getUserPreferences() devrait retourner les défauts pour un ExtendedUser sans préférences" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasVerifiedEmail() devrait retourner true pour un utilisateur avec email vérifié" name="User Interface - Tests Principaux hasVerifiedEmail() devrait retourner true pour un utilisateur avec email vérifié" time="0.002">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasVerifiedEmail() devrait retourner false pour un utilisateur avec email non vérifié" name="User Interface - Tests Principaux hasVerifiedEmail() devrait retourner false pour un utilisateur avec email non vérifié" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasVerifiedEmail() devrait retourner false pour un utilisateur de base" name="User Interface - Tests Principaux hasVerifiedEmail() devrait retourner false pour un utilisateur de base" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux hasVerifiedEmail() devrait retourner false pour un ExtendedUser sans propriété emailVerified" name="User Interface - Tests Principaux hasVerifiedEmail() devrait retourner false pour un ExtendedUser sans propriété emailVerified" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isActiveUser() devrait retourner true pour un utilisateur avec statut active" name="User Interface - Tests Principaux isActiveUser() devrait retourner true pour un utilisateur avec statut active" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isActiveUser() devrait retourner false pour un utilisateur suspendu" name="User Interface - Tests Principaux isActiveUser() devrait retourner false pour un utilisateur suspendu" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isActiveUser() devrait retourner false pour un utilisateur en attente de vérification" name="User Interface - Tests Principaux isActiveUser() devrait retourner false pour un utilisateur en attente de vérification" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isActiveUser() devrait retourner true pour un utilisateur de base" name="User Interface - Tests Principaux isActiveUser() devrait retourner true pour un utilisateur de base" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux isActiveUser() devrait retourner true pour un ExtendedUser sans statut (undefined)" name="User Interface - Tests Principaux isActiveUser() devrait retourner true pour un ExtendedUser sans statut (undefined)" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux getDisplayName() devrait retourner le nom pour un ExtendedUser avec nom" name="User Interface - Tests Principaux getDisplayName() devrait retourner le nom pour un ExtendedUser avec nom" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux getDisplayName() devrait retourner l&apos;email pour un ExtendedUser sans nom" name="User Interface - Tests Principaux getDisplayName() devrait retourner l&apos;email pour un ExtendedUser sans nom" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux getDisplayName() devrait retourner l&apos;email pour un utilisateur de base" name="User Interface - Tests Principaux getDisplayName() devrait retourner l&apos;email pour un utilisateur de base" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux getDisplayName() devrait gérer un nom vide" name="User Interface - Tests Principaux getDisplayName() devrait gérer un nom vide" time="0">
    </testcase>
    <testcase classname="User Interface - Tests Principaux getDisplayName() devrait gérer un nom avec seulement des espaces" name="User Interface - Tests Principaux getDisplayName() devrait gérer un nom avec seulement des espaces" time="0">
    </testcase>
  </testsuite>
</testsuites>